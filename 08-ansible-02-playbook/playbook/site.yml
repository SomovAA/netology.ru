---
- name: Install Clickhouse
  hosts: clickhouse
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted
  tasks:
    - block:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.noarch.rpm"
            dest: "./{{ item }}-{{ clickhouse_version }}.rpm"
          with_items: "{{ clickhouse_packages }}"
      rescue:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
            dest: "./clickhouse-common-static-{{ clickhouse_version }}.rpm"
    - name: Install clickhouse packages
      become: true
      ansible.builtin.yum:
        name:
          - clickhouse-common-static-{{ clickhouse_version }}.rpm
          - clickhouse-client-{{ clickhouse_version }}.rpm
          - clickhouse-server-{{ clickhouse_version }}.rpm
      notify: Start clickhouse service
    - name: Flush handlers
      meta: flush_handlers
    - name: Create database
      ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc !=82
      changed_when: create_db.rc == 0
- name: Install Vector # Наименование play-я
  hosts: vector # На каких хостах выполнять
  handlers: # Обработчик событий, которые можно вызывать в задачах
    - name: Restart Vector service # Имя для handler
      become: true
      ansible.builtin.service: # вызов модуля для работы с сервисами
        name: vector # Имя сервиса
        state: restarted # ожидаемое состояние
  tasks: # Список задач
    - name: Get version # Имя задачи
      ansible.builtin.command: vector --version # действия
      register: is_installed # Регистрация результата в переменную is_installed
      ignore_errors: yes # Игнорирование ошибок, чтобы следующие задачи выполнялись, чтобы не было остановки play-я
      tags: # Тэги
        - vector # Название тега
    - name: Print version
      ansible.builtin.debug: # Модуль дебага
        msg: Vector already installed # Вывожу на экран сообщение
      when: # Условия при которых срабатывает эта задача
        - is_installed is succeeded # Если vector был установлен
      tags:
        - vector
    - block: # группировка задач
        - name: Create a directory
          ansible.builtin.file: # Использую модуль file для создания директории с необходимыми правами
            path: "{{ ansible_user_dir }}" # Путь до директории, параметры лежат в group_vars/vector/vars.yml
            state: directory # Указываю тип
            mode: '0755' # Указываю права
            recurse: yes # Указываю рекурсию прав для вложенных директорий
        - name: Download
          ansible.builtin.get_url: # Использую модуль get_url для скачивания установочного файла
            url: "https://packages.timber.io/vector/{{ vector_version }}/vector-{{ vector_version }}-1.x86_64.rpm" # Откуда скачиваю
            dest: "{{ ansible_user_dir }}/vector-{{ vector_version }}-1.x86_64.rpm" # Куда складываю локально
            mode: '0664' # С какими правами складываю
        - name: Install package
          ansible.builtin.yum: # Использую модуль yum, менеджер пакетов
            name:
              - "{{ ansible_user_dir }}/vector-{{ vector_version }}-1.x86_64.rpm" # Устанавливаю Vector из скаченного ранее файла
          notify: Restart Vector service # Прошу запустить обработчик событий с этим названием
      when:
        - ansible_facts['distribution'] == "CentOS" # Только для CentOs
        - is_installed is failed # Если установки не было
      tags:
        - vector